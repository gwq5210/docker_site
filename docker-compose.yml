version: "3.1"
secrets:                        # top level secrets block
  gwq5210.com.key:
    file: ssl/gwq5210.com.key
  gwq5210.com.crt:
    file: ssl/gwq5210.com.crt
  mysql_root_password:
    file: mysql/conf/mysql_root_password.txt
  v2ray_uuid:
    file: v2ray/conf/v2ray_uuid.txt
  scrapyd_username:
    file: scrapyd/conf/scrapyd_username.txt
  scrapyd_password:
    file: scrapyd/conf/scrapyd_password.txt

services:
  gwq5210_nginx:
    # image: gwq5210/nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: gwq5210_nginx
    restart: always
    secrets:
     - gwq5210.com.key
     - gwq5210.com.crt
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/html:/var/www/gwq5210.com/html
      - /var/log/nginx:/var/log/nginx
    network_mode: "host"
    ports:  # host模式这个配置失效
      - "80:80"
      - "443:443"
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    environment:
      TZ: Asia/Shanghai
    depends_on:
      - gwq5210_tank
      - gwq5210_php
      - gwq5210_phpmyadmin
      - gwq5210_v2ray
      - gwq5210_filebrowser
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.2'
          memory: 128M

  gwq5210_mysql:
    # image: gwq5210/mysql
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    restart: always
    container_name: gwq5210_mysql  # 容器名
    secrets:
     - mysql_root_password
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/my.cnf
      - /var/log/mysql:/var/log/mysql
      - /var/lib/mysql:/var/lib/mysql  # 挂载目录，持久化存储
    ports:
      - "3306:3306"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password  # 使用docker secret设置root用户的密码
      MYSQL_DATABASE: "tank"

  gwq5210_tank:
    # image: gwq5210/tank
    build:
      context: .
      dockerfile: ./tank/Dockerfile
    restart: always
    container_name: gwq5210_tank
    volumes:
      - /usr/share/tank/matter:/data/build/matter
      - /etc/tank/:/data/build/conf
      - /var/log/tank:/data/build/log
    ports:
      - "127.0.0.1:6011:6010"
    links:
      - "gwq5210_mysql:gwq5210.com"
    depends_on:
      - gwq5210_mysql
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.2'
          memory: 128M

  gwq5210_php:
    # image: gwq5210/php
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: gwq5210_php
    restart: always
    ports:
      - "127.0.0.1:9000:9000"
    volumes:
      - ./nginx/html:/var/www/gwq5210.com/html
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 128M

  gwq5210_phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: gwq5210_phpmyadmin
    links:
      - "gwq5210_mysql:gwq5210.com"
    ports:
      - "127.0.0.1:8889:80"
    environment:
      TZ: Asia/Shanghai
      PMA_HOST: gwq5210.com
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - gwq5210_mysql
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 128M

  gwq5210_v2ray:
    # image: gwq5210/v2ray
    build:
      context: .
      dockerfile: ./v2ray/Dockerfile
    restart: always
    container_name: gwq5210_v2ray  # 容器名
    secrets:
     - v2ray_uuid
    volumes:
      - ./v2ray/conf/config.json:/etc/v2ray/config.json
      - /var/log/v2ray:/var/log/v2ray
    ports:
      - "127.0.0.1:10000:10000"
    environment:
      TZ: Asia/Shanghai
      V2RAY_UUID_FILE: /run/secrets/v2ray_uuid
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 128M

  gwq5210_filebrowser:
    # image: gwq5210/filebrowser
    build:
      context: .
      dockerfile: ./filebrowser/Dockerfile
    restart: always
    container_name: gwq5210_filebrowser  # 容器名
    volumes:
      - /usr/share/filebrowser/data:/srv
      - /etc/filebrowser:/etc/filebrowser
      - ./filebrowser/conf/filebrowser.json:/.filebrowser.json
    ports:
      - "127.0.0.1:9091:80"
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 128M

  gwq5210_scrapyd:
    # image: gwq5210/scrapyd
    build:
      context: .
      dockerfile: ./scrapyd/Dockerfile
    container_name: gwq5210_scrapyd  # 容器名
    ports:
      - "127.0.0.1:6801:6800"
    volumes:
      - ./scrapyd/conf:/etc/scrapyd
      - /usr/share/scrapyd:/usr/share/scrapyd
      - /var/log/scrapyd:/var/log/scrapyd
    restart: always
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 128M

  gwq5210_mirai:
    # image: gwq5210/mirai:latest
    build:
      context: .
      dockerfile: ./mirai/Dockerfile
    restart: always
    container_name: gwq5210_mirai  # 容器名
    volumes:
      - /usr/share/mirai/config:/root/mirai/config
      - /usr/share/mirai/plugins:/root/mirai/plugins
      - /usr/share/mirai/logs:/root/mirai/logs
      - /usr/share/mirai/bots:/root/mirai/bots
      - ./mirai/conf/Console/AutoLogin.yml:/root/mirai/config/Console/AutoLogin.yml
      - ./mirai/conf/net.mamoe.mirai-api-http/setting.yml:/root/mirai/config/net.mamoe.mirai-api-http/setting.yml
    ports: 
      - "127.0.0.1:8080:8080"
    environment:
      TZ: Asia/Shanghai
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.1'
    #       memory: 128M
    #     reservations:
    #       cpus: '0.1'
    #       memory: 128M
