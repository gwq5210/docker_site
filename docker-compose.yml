version: "3.1"

networks:
  default:
    driver: overlay

secrets:                        # top level secrets block
  gwq5210.com.key:
    external: true
  gwq5210.com.crt:
    external: true
  ca.crt:
    file: certs/ca/ca.crt
  mysql_root_password.txt:
    external: true
  v2ray_uuid.txt:
    external: true
  scrapyd_username.txt:
    external: true
  scrapyd_password.txt:
    external: true
  elasticsearch_bootstrap_password.txt:
    external: true
  elasticsearch_keystore_password.txt:
    external: true
  mirai_bot_qq.txt:
    external: true
  mirai_bot_qq_password.txt:
    external: true
  mirai_verify_key.txt:
    external: true

services:
  gwq5210_nginx:
    image: gwq5210/nginx:latest
    # build:
    #   context: .
    #   dockerfile: ./nginx/Dockerfile
    container_name: gwq5210_nginx
    secrets:
      - gwq5210.com.key
      - gwq5210.com.crt
    volumes:
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/var/www/gwq5210.com/html
      - ${DOCKER_SITE_LOGS_DIR}/nginx:/var/log/nginx
    # network_mode: "host"
    networks:
      - default
    ports:  # host模式这个配置失效
      - "80:80"
      - "443:443"
    depends_on:
      - gwq5210_scrapyd
      - gwq5210_mirai
      - gwq5210_elasticsearch
      - gwq5210_kibana
      - gwq5210_filebrowser
      - gwq5210_v2ray
      - gwq5210_tank
      - gwq5210_phpmyadmin
      - gwq5210_php
      # - gwq5210_jiacrontab_admin
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    environment:
      TZ: Asia/Shanghai
    healthcheck:
      test: curl -f http://localhost || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.2'
          memory: 2048M

  gwq5210_mysql:
    image: gwq5210/mysql:latest
    # build:
    #   context: .
    #   dockerfile: ./mysql/Dockerfile
    container_name: gwq5210_mysql  # 容器名
    secrets:
      - mysql_root_password.txt
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ${DOCKER_SITE_LOGS_DIR}/mysql:/var/log/mysql
      - ${DOCKER_SITE_KEY_DATA_DIR}/mysql:/var/lib/mysql  # 挂载目录，持久化存储
      - ${DOCKER_SITE_BACKUP_DIR}/mysql:/usr/share/mysql/backup
      - ./mysql/mysql_backup.sh:/usr/local/bin/mysql_backup.sh
    networks:
      - default
    ports:
      - "3306:3306"
      - "33060:33060"
      - "33061:33061"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password.txt  # 使用docker secret设置root用户的密码
      MYSQL_DATABASE: "tank"
    healthcheck:
      # 健康检查会导致容器重启
      test: mysqladmin -u root ping -h localhost -p$$(cat /run/secrets/mysql_root_password.txt) || exit 1
      interval: 60s
      timeout: 60s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2048M

  gwq5210_tank:
    image: gwq5210/tank:latest
    # build:
    #   context: .
    #   dockerfile: ./tank/Dockerfile
    container_name: gwq5210_tank
    volumes:
      - ${TANK_SHARE_DATA_DIR}:/data/build/matter
      - ${DOCKER_SITE_CONF_DIR}/tank:/data/build/conf
      - ${DOCKER_SITE_LOGS_DIR}/tank:/data/build/log
    networks:
      - default
    # ports:
    #   - "127.0.0.1:6011:6010"
    depends_on:
      - gwq5210_mysql
    environment:
      TZ: Asia/Shanghai
    healthcheck:
      test: curl -f http://localhost:6010 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2048M

  gwq5210_php:
    image: gwq5210/php:latest
    # build:
    #   context: .
    #   dockerfile: ./php/Dockerfile
    container_name: gwq5210_php
    networks:
      - default
    # ports:
    #   - "127.0.0.1:9000:9000"
    volumes:
      - ./nginx/html:/var/www/gwq5210.com/html
    environment:
      TZ: Asia/Shanghai
    healthcheck:
      test: php-fpm-healthcheck || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.1'
          memory: 2048M

  gwq5210_phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gwq5210_phpmyadmin
    networks:
      - default
    # ports:
    #   - "127.0.0.1:8889:80"
    environment:
      TZ: Asia/Shanghai
      PMA_ABSOLUTE_URI: https://phpmyadmin.gwq5210.com
      PMA_HOST: gwq5210.com
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    depends_on:
      - gwq5210_mysql
    healthcheck:
      test: curl -f http://localhost || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.1'
          memory: 2048M

  gwq5210_v2ray:
    image: gwq5210/v2ray:latest
    # build:
    #   context: .
    #   dockerfile: ./v2ray/Dockerfile
    container_name: gwq5210_v2ray  # 容器名
    secrets:
      - v2ray_uuid.txt
    volumes:
      - ./v2ray/conf/config.json:/etc/v2ray/config.json
      - ${DOCKER_SITE_LOGS_DIR}/v2ray:/var/log/v2ray
    networks:
      - default
    # ports:
    #   - "127.0.0.1:10000:10000"
    environment:
      TZ: Asia/Shanghai
      V2RAY_UUID_FILE: /run/secrets/v2ray_uuid.txt
    healthcheck:
      test: curl -s http://localhost:10000 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.1'
          memory: 2048M

  gwq5210_filebrowser:
    image: gwq5210/filebrowser:latest
    # build:
    #   context: .
    #   dockerfile: ./filebrowser/Dockerfile
    container_name: gwq5210_filebrowser  # 容器名
    networks:
      - default
    volumes:
      - ${FILE_BROWSER_SHARE_DATA_DIR}:/srv
      - ${DOCKER_SITE_CONF_DIR}/filebrowser:/etc/filebrowser
      - ./filebrowser/conf/filebrowser.json:/.filebrowser.json
    # ports:
    #   - "127.0.0.1:9091:80"
    environment:
      TZ: Asia/Shanghai
    deploy:
      resources:
        limits:
          # cpus: '0.1'
          memory: 2048M

  gwq5210_scrapyd:
    image: gwq5210/scrapyd:latest
    # build:
    #   context: .
    #   dockerfile: ./scrapyd/Dockerfile
    container_name: gwq5210_scrapyd  # 容器名
    networks:
      - default
    # ports:
    #   - "127.0.0.1:6800:6800"
    volumes:
      - ./scrapyd/conf:/etc/scrapyd
      - ${DOCKER_SITE_LOGS_DIR}/scrapyd:/var/log/scrapyd
      - ${DOCKER_SITE_DATA_DIR}/scrapyd:/var/lib/scrapyd
      - ${TANK_SHARE_DATA_DIR}/gwq5210/root:/usr/share/scrapyd
    environment:
      TZ: Asia/Shanghai
      SCRAPYD_USERNAME_FILE: /run/secrets/scrapyd_username.txt
      SCRAPYD_PASSWORD_FILE: /run/secrets/scrapyd_password.txt
    secrets:
      - scrapyd_username.txt
      - scrapyd_password.txt
    healthcheck:
      test: curl -s http://localhost:6800 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.1'
          memory: 2048M

  gwq5210_scrapydweb:
    image: gwq5210/scrapydweb:latest
    container_name: gwq5210_scrapydweb  # 容器名
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./scrapydweb/conf/settings.py:/app/scrapydweb_settings_v10.py
      - ${DOCKER_SITE_LOGS_DIR}/scrapyd:/var/log/scrapyd
      - ${DOCKER_SITE_DATA_DIR}/scrapyd:/var/lib/scrapyd
      - ${DOCKER_SITE_DATA_DIR}/scrapydweb:/app/data
    depends_on:
      - gwq5210_scrapyd
      - gwq5210_mysql
    secrets:
      - scrapyd_username.txt
      - scrapyd_password.txt
      - gwq5210.com.key
      - gwq5210.com.crt
      - mysql_root_password.txt
    ports:
      - "5000:5000"
    deploy:
      # restart_policy:
      #   condition: none
      resources:
        limits:
          # cpus: '0.5'
          memory: 2048M

  gwq5210_mirai:
    image: gwq5210/mirai:latest
    # build:
    #   context: .
    #   dockerfile: ./mirai/Dockerfile
    container_name: gwq5210_mirai  # 容器名
    volumes:
      - ${DOCKER_SITE_DATA_DIR}/mirai/bots:/usr/share/mirai/bots
      - ${DOCKER_SITE_LOGS_DIR}/mirai:/usr/share/mirai/logs
      - ./mirai/conf/Console/AutoLogin.yml:/etc/mirai/Console/AutoLogin.yml
      - ./mirai/conf/net.mamoe.mirai-api-http/setting.yml:/etc/mirai/net.mamoe.mirai-api-http/setting.yml
    # ports: 
    #   - "127.0.0.1:8080:8080"
    networks:
      - default
    environment:
      TZ: Asia/Shanghai
      # MIRAI_JAVA_OPTS: "-Xms128m -Xmx128m"
      MIRAI_JAVA_OPTS: "-Dmcl.disable-ansi=true"
      MIRAI_ARGS: "-x --boot-only"
      MIRAI_VERIFY_KEY_FILE: "/run/secrets/mirai_verify_key.txt"
      MIRAI_BOT_QQ_FILE: "/run/secrets/mirai_bot_qq.txt"
      MIRAI_BOT_QQ_PASSWORD_FILE: "/run/secrets/mirai_bot_qq_password.txt"
    secrets:
      - mirai_bot_qq.txt
      - mirai_bot_qq_password.txt
      - mirai_verify_key.txt
    healthcheck:
      test: curl -s http://localhost:8080 || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      # restart_policy:
      #   condition: none
      resources:
        limits:
          # cpus: '0.5'
          memory: 2048M

  gwq5210_elasticsearch:
    image: gwq5210/elasticsearch:latest
    # build:
    #   context: .
    #   dockerfile: ./elasticsearch/Dockerfile
    container_name: gwq5210_elasticsearch
    networks:
      - default
    environment:
      - TZ=Asia/Shanghai
      - bootstrap.memory_lock=true
      - xpack.license.self_generated.type=${LICENSE}
      # - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - ELASTIC_PASSWORD_FILE=/run/secrets/elasticsearch_bootstrap_password.txt
      - KEYSTORE_PASSWORD_FILE=/run/secrets/elasticsearch_keystore_password.txt
    secrets:
      - source: gwq5210.com.crt
        target: $ES_CERTS_DIR/gwq5210.com.crt
      - source: gwq5210.com.key
        target: $ES_CERTS_DIR/gwq5210.com.key
      - source: ca.crt
        target: $ES_CERTS_DIR/ca.crt
      - source: elasticsearch_bootstrap_password.txt
        target: /run/secrets/elasticsearch_bootstrap_password.txt
        mode: 0400
      - source: elasticsearch_keystore_password.txt
        target: /run/secrets/elasticsearch_keystore_password.txt
        mode: 0400
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${DOCKER_SITE_BACKUP_DIR}/elasticsearch:/usr/share/elasticsearch/backup
      - ${DOCKER_SITE_KEY_DATA_DIR}/elasticsearch/data:/usr/share/elasticsearch/data
      - ${DOCKER_SITE_KEY_DATA_DIR}/elasticsearch/config/elasticsearch.keystore:/usr/share/elasticsearch/config/elasticsearch.keystore
      - ./elasticsearch/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: curl --cacert $ES_CERTS_DIR/ca.crt -s -k https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.5'
          memory: 2048M

  gwq5210_kibana:
    image: gwq5210/kibana:latest
    # build:
    #   context: .
    #   dockerfile: ./kibana/Dockerfile
    container_name: gwq5210_kibana
    depends_on:
      - gwq5210_elasticsearch
    networks:
      - default
    ports:
      - 5601:5601
    environment:
      TZ: Asia/Shanghai
    secrets:
      - source: gwq5210.com.crt
        target: $KIBANA_CERTS_DIR/gwq5210.com.crt
      - source: gwq5210.com.key
        target: $KIBANA_CERTS_DIR/gwq5210.com.key
      - source: ca.crt
        target: $KIBANA_CERTS_DIR/ca.crt
    volumes:
      - ./kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./kibana/conf/node.options:/usr/share/kibana/config/node.options
      - ${DOCKER_SITE_KEY_DATA_DIR}/kibana/config/kibana.keystore:/usr/share/kibana/config/kibana.keystore
    healthcheck:
      test: curl --cacert $KIBANA_CERTS_DIR/ca.crt -s -k https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          # cpus: '0.5'
          memory: 2048M

  gwq5210_aliyunpan_sync:
    image: tickstep/aliyunpan-sync:v0.2.2
    container_name: gwq5210_aliyunpan_sync
    restart: always
    volumes:
      # 指定本地备份目录绝对路径：/tickstep/Documents/设计文档
      - ${DOCKER_SITE_HOME}:/home/app/data:rw
      # （可选）可以指定JS插件sync_handler.js用于过滤文件，详见下面的插件说明
      #- ./plugin/js/sync_handler.js:/home/app/config/plugin/js/sync_handler.js
      # （推荐）挂载sync_drive同步数据库到本地，这样即使容器销毁，同步数据库还可以用于以后使用
      - ${DOCKER_SITE_KEY_DATA_DIR}/aliyunpan/sync_drive:/home/app/config/sync_drive
    environment:
      - TZ=Asia/Shanghai
      # refresh token
      - ALIYUNPAN_REFRESH_TOKEN=
      # 上传下载链接类型：1-默认 2-阿里ECS环境
      - ALIYUNPAN_TRANSFER_URL_TYPE=1
      # 下载文件并发数
      - ALIYUNPAN_DOWNLOAD_PARALLEL=2
      # 上传文件并发数
      - ALIYUNPAN_UPLOAD_PARALLEL=2
      # 下载数据块大小，单位为KB，默认为1024KB，建议范围1024KB~10240KB
      - ALIYUNPAN_DOWNLOAD_BLOCK_SIZE=1024
      # 上传数据块大小，单位为KB，默认为10240KB，建议范围1024KB~10240KB
      - ALIYUNPAN_UPLOAD_BLOCK_SIZE=10240
      # 指定网盘文件夹作为备份目录，不要指定根目录
      - ALIYUNPAN_PAN_DIR=/docker_site_data
      # 备份模式：upload(备份本地文件到云盘), download(备份云盘文件到本地), sync(双向同步备份)
      - ALIYUNPAN_SYNC_MODE=upload
      # 优先级，只对双向同步备份模式有效。选项支持三种: time-时间优先，local-本地优先，pan-网盘优先
      - ALIYUNPAN_SYNC_PRIORITY=time
      # 是否显示文件备份过程日志，true-显示，false-不显示
      - ALIYUNPAN_SYNC_LOG=true
      # 本地文件修改检测延迟间隔，单位秒。如果本地文件会被频繁修改，例如录制视频文件，配置好该时间可以避免上传未录制好的文件
      - ALIYUNPAN_LOCAL_DELAY_TIME=3
      # 任务步骤, 支持两种: scan(只扫描并建立同步数据库),sync(正常启动同步任务)
      - ALIYUNPAN_TASK_STEP=sync
    deploy:
      resources:
        limits:
          # cpus: '0.5'
          memory: 2048M

  # gwq5210_baota:
  #   image: gwq5210/baota:latest
  #   container_name: gwq5210_baota
  #   restart: always
  #   ports:
  #     - "8888:8888"
  #   environment:
  #     - TZ=Asia/Shanghai
  #   deploy:
  #     resources:
  #       limits:
  #         # cpus: '0.5'
  #         memory: 2048M

  # gwq5210_jiacrontab_admin:
  #   image: gwq5210/jiacrontab:latest
  #   container_name: gwq5210_jiacrontab_admin
  #   restart: always
  #   command: ./jiacrontab_admin -config /etc/jiacrontab/jiacrontab_admin.ini
  #   volumes:
  #     - ${DOCKER_SITE_DATA_DIR}/jiacrontab:/jiacrontab/bin/data
  #     - ./jiacrontab/conf/jiacrontab_admin.ini:/etc/jiacrontab/jiacrontab_admin.ini
  #   environment:
  #     - TZ=Asia/Shanghai
  #   deploy:
  #     resources:
  #       limits:
  #         # cpus: '0.5'
  #         memory: 2048M

  # gwq5210_jiacrontabd:
  #   image: gwq5210/jiacrontab:latest
  #   container_name: gwq5210_jiacrontabd
  #   restart: always
  #   command: ./jiacrontabd -config /etc/jiacrontab/jiacrontabd.ini
  #   volumes:
  #     - ${DOCKER_SITE_DATA_DIR}/jiacrontab:/jiacrontab/bin/data
  #     - ./jiacrontab/conf/jiacrontabd.ini:/etc/jiacrontab/jiacrontabd.ini
  #   environment:
  #     - TZ=Asia/Shanghai
  #   deploy:
  #     resources:
  #       limits:
  #         # cpus: '0.5'
  #         memory: 2048M